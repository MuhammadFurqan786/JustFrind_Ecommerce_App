// Generated by data binding compiler. Do not edit!
package com.iamport.sampleapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.iamport.sampleapp.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class PaymentFragmentBinding extends ViewDataBinding {
  @NonNull
  public final EditText amount;

  @NonNull
  public final Button backButton;

  @NonNull
  public final ConstraintLayout buttonParent;

  @NonNull
  public final EditText cardDirectCode;

  @NonNull
  public final ConstraintLayout certParent;

  @NonNull
  public final Button certificationButton;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final EditText merchantUid;

  @NonNull
  public final Button mobilewebModeButton;

  @NonNull
  public final EditText name;

  @NonNull
  public final Button paymentButton;

  @NonNull
  public final Spinner pg;

  @NonNull
  public final Spinner pgMethod;

  @NonNull
  public final ConstraintLayout pgMethodView;

  @NonNull
  public final ConstraintLayout pgView;

  @NonNull
  public final View top;

  @NonNull
  public final Spinner userCode;

  @NonNull
  public final ConstraintLayout userCodeView;

  @NonNull
  public final Button webviewModeButton;

  protected PaymentFragmentBinding(Object _bindingComponent, View _root, int _localFieldCount,
      EditText amount, Button backButton, ConstraintLayout buttonParent, EditText cardDirectCode,
      ConstraintLayout certParent, Button certificationButton, ConstraintLayout main,
      EditText merchantUid, Button mobilewebModeButton, EditText name, Button paymentButton,
      Spinner pg, Spinner pgMethod, ConstraintLayout pgMethodView, ConstraintLayout pgView,
      View top, Spinner userCode, ConstraintLayout userCodeView, Button webviewModeButton) {
    super(_bindingComponent, _root, _localFieldCount);
    this.amount = amount;
    this.backButton = backButton;
    this.buttonParent = buttonParent;
    this.cardDirectCode = cardDirectCode;
    this.certParent = certParent;
    this.certificationButton = certificationButton;
    this.main = main;
    this.merchantUid = merchantUid;
    this.mobilewebModeButton = mobilewebModeButton;
    this.name = name;
    this.paymentButton = paymentButton;
    this.pg = pg;
    this.pgMethod = pgMethod;
    this.pgMethodView = pgMethodView;
    this.pgView = pgView;
    this.top = top;
    this.userCode = userCode;
    this.userCodeView = userCodeView;
    this.webviewModeButton = webviewModeButton;
  }

  @NonNull
  public static PaymentFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.payment_fragment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static PaymentFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<PaymentFragmentBinding>inflateInternal(inflater, R.layout.payment_fragment, root, attachToRoot, component);
  }

  @NonNull
  public static PaymentFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.payment_fragment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static PaymentFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<PaymentFragmentBinding>inflateInternal(inflater, R.layout.payment_fragment, null, false, component);
  }

  public static PaymentFragmentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static PaymentFragmentBinding bind(@NonNull View view, @Nullable Object component) {
    return (PaymentFragmentBinding)bind(component, view, R.layout.payment_fragment);
  }
}
